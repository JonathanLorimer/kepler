-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Please see the README on GitHub at
--   <a>https://github.com/f-o-a-m/kepler/blob/master/hs-abci-docs/nameservice/README.md</a>
@package nameservice
@version 0.1.0.0

module Nameservice.Aeson
defaultNameserviceOptions :: String -> Options

module Nameservice.Config
data AppConfig
AppConfig :: Context -> IORef (Maybe ThreadId) -> AppConfig
[_baseAppContext] :: AppConfig -> Context
[_prometheusServerThreadId] :: AppConfig -> IORef (Maybe ThreadId)
baseAppContext :: Lens' AppConfig Context
prometheusServerThreadId :: Lens' AppConfig (IORef (Maybe ThreadId))
makeAppConfig :: IO AppConfig

module Nameservice.Modules.Nameservice.Keys
whoisMapKey :: ByteString

module Nameservice.Modules.Nameservice.Messages
data SetNameMsg
SetNameMsg :: Text -> Address -> Text -> SetNameMsg
[setNameName] :: SetNameMsg -> Text
[setNameOwner] :: SetNameMsg -> Address
[setNameValue] :: SetNameMsg -> Text
data BuyNameMsg
BuyNameMsg :: Amount -> Text -> Text -> Address -> BuyNameMsg
[buyNameBid] :: BuyNameMsg -> Amount
[buyNameName] :: BuyNameMsg -> Text
[buyNameValue] :: BuyNameMsg -> Text
[buyNameBuyer] :: BuyNameMsg -> Address
data DeleteNameMsg
DeleteNameMsg :: Address -> Text -> DeleteNameMsg
[deleteNameOwner] :: DeleteNameMsg -> Address
[deleteNameName] :: DeleteNameMsg -> Text
data FaucetAccountMsg
FaucetAccountMsg :: Address -> CoinId -> Amount -> FaucetAccountMsg
[faucetAccountTo] :: FaucetAccountMsg -> Address
[faucetAccountCoinId] :: FaucetAccountMsg -> CoinId
[faucetAccountAmount] :: FaucetAccountMsg -> Amount
data BuyNameMessage
BuyNameMessage :: Word64 -> Text -> Text -> Address -> BuyNameMessage
[buyNameMessageBid] :: BuyNameMessage -> Word64
[buyNameMessageName] :: BuyNameMessage -> Text
[buyNameMessageValue] :: BuyNameMessage -> Text
[buyNameMessageBuyer] :: BuyNameMessage -> Address
instance GHC.Generics.Generic Nameservice.Modules.Nameservice.Messages.BuyNameMessage
instance GHC.Show.Show Nameservice.Modules.Nameservice.Messages.BuyNameMessage
instance GHC.Classes.Eq Nameservice.Modules.Nameservice.Messages.BuyNameMessage
instance GHC.Show.Show Nameservice.Modules.Nameservice.Messages.BuyNameMsg
instance GHC.Classes.Eq Nameservice.Modules.Nameservice.Messages.BuyNameMsg
instance GHC.Generics.Generic Nameservice.Modules.Nameservice.Messages.DeleteNameMsg
instance GHC.Show.Show Nameservice.Modules.Nameservice.Messages.DeleteNameMsg
instance GHC.Classes.Eq Nameservice.Modules.Nameservice.Messages.DeleteNameMsg
instance GHC.Generics.Generic Nameservice.Modules.Nameservice.Messages.SetNameMsg
instance GHC.Show.Show Nameservice.Modules.Nameservice.Messages.SetNameMsg
instance GHC.Classes.Eq Nameservice.Modules.Nameservice.Messages.SetNameMsg
instance GHC.Generics.Generic Nameservice.Modules.Nameservice.Messages.FaucetAccountMessage
instance GHC.Show.Show Nameservice.Modules.Nameservice.Messages.FaucetAccountMessage
instance GHC.Classes.Eq Nameservice.Modules.Nameservice.Messages.FaucetAccountMessage
instance GHC.Show.Show Nameservice.Modules.Nameservice.Messages.FaucetAccountMsg
instance GHC.Classes.Eq Nameservice.Modules.Nameservice.Messages.FaucetAccountMsg
instance Proto3.Suite.Class.Message Nameservice.Modules.Nameservice.Messages.BuyNameMessage
instance Proto3.Suite.Class.Named Nameservice.Modules.Nameservice.Messages.BuyNameMessage
instance Tendermint.SDK.Codec.HasCodec Nameservice.Modules.Nameservice.Messages.BuyNameMsg
instance Tendermint.SDK.Types.Message.HasMessageType Nameservice.Modules.Nameservice.Messages.BuyNameMsg
instance Tendermint.SDK.Types.Message.ValidateMessage Nameservice.Modules.Nameservice.Messages.BuyNameMsg
instance Proto3.Suite.Class.Message Nameservice.Modules.Nameservice.Messages.DeleteNameMsg
instance Proto3.Suite.Class.Named Nameservice.Modules.Nameservice.Messages.DeleteNameMsg
instance Tendermint.SDK.Types.Message.HasMessageType Nameservice.Modules.Nameservice.Messages.DeleteNameMsg
instance Tendermint.SDK.Codec.HasCodec Nameservice.Modules.Nameservice.Messages.DeleteNameMsg
instance Tendermint.SDK.Types.Message.ValidateMessage Nameservice.Modules.Nameservice.Messages.DeleteNameMsg
instance Proto3.Suite.Class.Message Nameservice.Modules.Nameservice.Messages.SetNameMsg
instance Proto3.Suite.Class.Named Nameservice.Modules.Nameservice.Messages.SetNameMsg
instance Tendermint.SDK.Types.Message.HasMessageType Nameservice.Modules.Nameservice.Messages.SetNameMsg
instance Tendermint.SDK.Codec.HasCodec Nameservice.Modules.Nameservice.Messages.SetNameMsg
instance Tendermint.SDK.Types.Message.ValidateMessage Nameservice.Modules.Nameservice.Messages.SetNameMsg
instance Proto3.Suite.Class.Message Nameservice.Modules.Nameservice.Messages.FaucetAccountMessage
instance Proto3.Suite.Class.Named Nameservice.Modules.Nameservice.Messages.FaucetAccountMessage
instance Tendermint.SDK.Codec.HasCodec Nameservice.Modules.Nameservice.Messages.FaucetAccountMsg
instance Tendermint.SDK.Types.Message.HasMessageType Nameservice.Modules.Nameservice.Messages.FaucetAccountMsg
instance Tendermint.SDK.Types.Message.ValidateMessage Nameservice.Modules.Nameservice.Messages.FaucetAccountMsg

module Nameservice.Modules.Nameservice.Types
type NameserviceName = "nameservice"
data Whois
Whois :: Text -> Address -> Amount -> Whois
[whoisValue] :: Whois -> Text
[whoisOwner] :: Whois -> Address
[whoisPrice] :: Whois -> Amount
data WhoisMessage
WhoisMessage :: Text -> Address -> Word64 -> WhoisMessage
[whoisMessageValue] :: WhoisMessage -> Text
[whoisMessageOwner] :: WhoisMessage -> Address
[whoisMessagePrice] :: WhoisMessage -> Word64
data NameserviceError
InsufficientBid :: Text -> NameserviceError
UnauthorizedSet :: Text -> NameserviceError
InvalidDelete :: Text -> NameserviceError
data Faucetted
Faucetted :: Address -> CoinId -> Amount -> Faucetted
[faucettedAccount] :: Faucetted -> Address
[faucettedCoinId] :: Faucetted -> CoinId
[faucettedAmount] :: Faucetted -> Amount
faucettedAesonOptions :: Options
data NameClaimed
NameClaimed :: Address -> Text -> Text -> Amount -> NameClaimed
[nameClaimedOwner] :: NameClaimed -> Address
[nameClaimedName] :: NameClaimed -> Text
[nameClaimedValue] :: NameClaimed -> Text
[nameClaimedBid] :: NameClaimed -> Amount
nameClaimedAesonOptions :: Options
data NameRemapped
NameRemapped :: Text -> Text -> Text -> NameRemapped
[nameRemappedName] :: NameRemapped -> Text
[nameRemappedOldValue] :: NameRemapped -> Text
[nameRemappedNewValue] :: NameRemapped -> Text
nameRemappedAesonOptions :: Options
data NameDeleted
NameDeleted :: Text -> NameDeleted
[nameDeletedName] :: NameDeleted -> Text
nameDeletedAesonOptions :: Options
instance GHC.Generics.Generic Nameservice.Modules.Nameservice.Types.NameDeleted
instance GHC.Show.Show Nameservice.Modules.Nameservice.Types.NameDeleted
instance GHC.Classes.Eq Nameservice.Modules.Nameservice.Types.NameDeleted
instance GHC.Generics.Generic Nameservice.Modules.Nameservice.Types.NameRemapped
instance GHC.Show.Show Nameservice.Modules.Nameservice.Types.NameRemapped
instance GHC.Classes.Eq Nameservice.Modules.Nameservice.Types.NameRemapped
instance GHC.Generics.Generic Nameservice.Modules.Nameservice.Types.NameClaimed
instance GHC.Show.Show Nameservice.Modules.Nameservice.Types.NameClaimed
instance GHC.Classes.Eq Nameservice.Modules.Nameservice.Types.NameClaimed
instance GHC.Generics.Generic Nameservice.Modules.Nameservice.Types.Faucetted
instance GHC.Show.Show Nameservice.Modules.Nameservice.Types.Faucetted
instance GHC.Classes.Eq Nameservice.Modules.Nameservice.Types.Faucetted
instance GHC.Generics.Generic Nameservice.Modules.Nameservice.Types.WhoisMessage
instance GHC.Show.Show Nameservice.Modules.Nameservice.Types.WhoisMessage
instance GHC.Classes.Eq Nameservice.Modules.Nameservice.Types.WhoisMessage
instance GHC.Show.Show Nameservice.Modules.Nameservice.Types.Whois
instance GHC.Classes.Eq Nameservice.Modules.Nameservice.Types.Whois
instance Data.Aeson.Types.ToJSON.ToJSON Nameservice.Modules.Nameservice.Types.NameDeleted
instance Data.Aeson.Types.FromJSON.FromJSON Nameservice.Modules.Nameservice.Types.NameDeleted
instance Tendermint.SDK.BaseApp.Events.ToEvent Nameservice.Modules.Nameservice.Types.NameDeleted
instance Tendermint.SDK.BaseApp.Logger.Select Nameservice.Modules.Nameservice.Types.NameDeleted
instance Data.Aeson.Types.ToJSON.ToJSON Nameservice.Modules.Nameservice.Types.NameRemapped
instance Data.Aeson.Types.FromJSON.FromJSON Nameservice.Modules.Nameservice.Types.NameRemapped
instance Tendermint.SDK.BaseApp.Events.ToEvent Nameservice.Modules.Nameservice.Types.NameRemapped
instance Tendermint.SDK.BaseApp.Logger.Select Nameservice.Modules.Nameservice.Types.NameRemapped
instance Data.Aeson.Types.ToJSON.ToJSON Nameservice.Modules.Nameservice.Types.NameClaimed
instance Data.Aeson.Types.FromJSON.FromJSON Nameservice.Modules.Nameservice.Types.NameClaimed
instance Tendermint.SDK.BaseApp.Events.ToEvent Nameservice.Modules.Nameservice.Types.NameClaimed
instance Tendermint.SDK.BaseApp.Logger.Select Nameservice.Modules.Nameservice.Types.NameClaimed
instance Data.Aeson.Types.ToJSON.ToJSON Nameservice.Modules.Nameservice.Types.Faucetted
instance Data.Aeson.Types.FromJSON.FromJSON Nameservice.Modules.Nameservice.Types.Faucetted
instance Tendermint.SDK.BaseApp.Events.ToEvent Nameservice.Modules.Nameservice.Types.Faucetted
instance Tendermint.SDK.BaseApp.Logger.Select Nameservice.Modules.Nameservice.Types.Faucetted
instance Tendermint.SDK.BaseApp.Errors.IsAppError Nameservice.Modules.Nameservice.Types.NameserviceError
instance Proto3.Suite.Class.Message Nameservice.Modules.Nameservice.Types.WhoisMessage
instance Proto3.Suite.Class.Named Nameservice.Modules.Nameservice.Types.WhoisMessage
instance Tendermint.SDK.Codec.HasCodec Nameservice.Modules.Nameservice.Types.Whois

module Nameservice.Modules.Nameservice.Store
newtype Name
Name :: Text -> Name
[unName] :: Name -> Text
whoisMap :: Map Name Whois
instance Tendermint.SDK.BaseApp.Store.RawStore.RawKey Nameservice.Modules.Nameservice.Store.NameWhoisMapKey
instance Tendermint.SDK.BaseApp.Store.RawStore.IsKey Nameservice.Modules.Nameservice.Store.NameWhoisMapKey Nameservice.Modules.Nameservice.Store.NameserviceNamespace
instance Data.Aeson.Types.FromJSON.FromJSON Nameservice.Modules.Nameservice.Store.Name
instance Data.Aeson.Types.ToJSON.ToJSON Nameservice.Modules.Nameservice.Store.Name
instance GHC.Show.Show Nameservice.Modules.Nameservice.Store.Name
instance GHC.Classes.Eq Nameservice.Modules.Nameservice.Store.Name
instance Tendermint.SDK.BaseApp.Store.RawStore.RawKey Nameservice.Modules.Nameservice.Store.Name
instance Tendermint.SDK.BaseApp.Query.Types.QueryData Nameservice.Modules.Nameservice.Store.Name

module Nameservice.Modules.Nameservice.Query

-- | Query API
type QueryApi = "whois" :> StoreLeaf (Map Name Whois)
querier :: Members QueryEffs r => RouteQ QueryApi r

module Nameservice.Modules.Nameservice.Keeper
type NameserviceEffs = '[NameserviceKeeper, Error NameserviceError]
data NameserviceKeeper m a
[FaucetAccount] :: FaucetAccountMsg -> NameserviceKeeper m ()
[BuyName] :: BuyNameMsg -> NameserviceKeeper m ()
[DeleteName] :: DeleteNameMsg -> NameserviceKeeper m ()
[SetName] :: SetNameMsg -> NameserviceKeeper m ()
[GetWhois] :: Name -> NameserviceKeeper m (Maybe Whois)
nameserviceCoinId :: CoinId
setName :: forall r_a1c1A. MemberWithError NameserviceKeeper r_a1c1A => SetNameMsg -> Sem r_a1c1A ()
deleteName :: forall r_a1c1y. MemberWithError NameserviceKeeper r_a1c1y => DeleteNameMsg -> Sem r_a1c1y ()
buyName :: forall r_a1c1w. MemberWithError NameserviceKeeper r_a1c1w => BuyNameMsg -> Sem r_a1c1w ()
faucetAccount :: forall r_a1c1u. MemberWithError NameserviceKeeper r_a1c1u => FaucetAccountMsg -> Sem r_a1c1u ()
getWhois :: forall r_a1c1C. MemberWithError NameserviceKeeper r_a1c1C => Name -> Sem r_a1c1C (Maybe Whois)
eval :: Members TxEffs r => Members BankEffs r => Members BaseEffs r => forall a. Sem (NameserviceKeeper : (Error NameserviceError : r)) a -> Sem r a

module Nameservice.Modules.Nameservice.Router
type MessageApi = TypedMessage BuyNameMsg :~> Return () :<|> TypedMessage SetNameMsg :~> Return () :<|> TypedMessage DeleteNameMsg :~> Return () :<|> TypedMessage FaucetAccountMsg :~> Return ()
messageHandlers :: Members NameserviceEffs r => Members BaseEffs r => RouteTx MessageApi r

module Nameservice.Modules.Nameservice
type Nameservice = Module NameserviceName MessageApi MessageApi QueryApi NameserviceEffs '[Bank]
nameserviceModule :: Members (ModuleEffs Nameservice) r => Nameservice r
newtype Name
Name :: Text -> Name
[unName] :: Name -> Text

module Nameservice.Application
type NameserviceModules = '[Nameservice, Bank, Auth]
handlersContext :: HandlersContext Secp256k1 NameserviceModules CoreEffs

module Nameservice.Server
makeAndServeApplication :: AppConfig -> IO ()
