-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Please see the README on GitHub at
--   <a>https://github.com/f-o-a-m/kepler/blob/master/hs-abci-docs/nameservice/README.md</a>
@package nameservice
@version 0.1.0.0

module Nameservice.Aeson
defaultNameserviceOptions :: String -> Options

module Nameservice.Config
data AppConfig
AppConfig :: Context -> IORef (Maybe ThreadId) -> AppConfig
[_baseAppContext] :: AppConfig -> Context
[_prometheusServerThreadId] :: AppConfig -> IORef (Maybe ThreadId)
baseAppContext :: Lens' AppConfig Context
prometheusServerThreadId :: Lens' AppConfig (IORef (Maybe ThreadId))
makeAppConfig :: IO AppConfig

module Nameservice.Modules.Nameservice.Types
type NameserviceModuleName = "nameservice"
newtype Name
Name :: Text -> Name
data Whois
Whois :: Text -> Address -> Amount -> Whois
[whoisValue] :: Whois -> Text
[whoisOwner] :: Whois -> Address
[whoisPrice] :: Whois -> Amount
data WhoisMessage
WhoisMessage :: Text -> Address -> Word64 -> WhoisMessage
[whoisMessageValue] :: WhoisMessage -> Text
[whoisMessageOwner] :: WhoisMessage -> Address
[whoisMessagePrice] :: WhoisMessage -> Word64
data NameserviceError
InsufficientBid :: Text -> NameserviceError
UnauthorizedSet :: Text -> NameserviceError
InvalidDelete :: Text -> NameserviceError
data Faucetted
Faucetted :: Address -> CoinId -> Amount -> Faucetted
[faucettedAccount] :: Faucetted -> Address
[faucettedCoinId] :: Faucetted -> CoinId
[faucettedAmount] :: Faucetted -> Amount
faucettedAesonOptions :: Options
data NameClaimed
NameClaimed :: Address -> Name -> Text -> Amount -> NameClaimed
[nameClaimedOwner] :: NameClaimed -> Address
[nameClaimedName] :: NameClaimed -> Name
[nameClaimedValue] :: NameClaimed -> Text
[nameClaimedBid] :: NameClaimed -> Amount
nameClaimedAesonOptions :: Options
data NameRemapped
NameRemapped :: Name -> Text -> Text -> NameRemapped
[nameRemappedName] :: NameRemapped -> Name
[nameRemappedOldValue] :: NameRemapped -> Text
[nameRemappedNewValue] :: NameRemapped -> Text
nameRemappedAesonOptions :: Options
data NameDeleted
NameDeleted :: Name -> NameDeleted
[nameDeletedName] :: NameDeleted -> Name
nameDeletedAesonOptions :: Options
instance GHC.Generics.Generic Nameservice.Modules.Nameservice.Types.NameDeleted
instance GHC.Show.Show Nameservice.Modules.Nameservice.Types.NameDeleted
instance GHC.Classes.Eq Nameservice.Modules.Nameservice.Types.NameDeleted
instance GHC.Generics.Generic Nameservice.Modules.Nameservice.Types.NameRemapped
instance GHC.Show.Show Nameservice.Modules.Nameservice.Types.NameRemapped
instance GHC.Classes.Eq Nameservice.Modules.Nameservice.Types.NameRemapped
instance GHC.Generics.Generic Nameservice.Modules.Nameservice.Types.NameClaimed
instance GHC.Show.Show Nameservice.Modules.Nameservice.Types.NameClaimed
instance GHC.Classes.Eq Nameservice.Modules.Nameservice.Types.NameClaimed
instance GHC.Generics.Generic Nameservice.Modules.Nameservice.Types.Faucetted
instance GHC.Show.Show Nameservice.Modules.Nameservice.Types.Faucetted
instance GHC.Classes.Eq Nameservice.Modules.Nameservice.Types.Faucetted
instance GHC.Generics.Generic Nameservice.Modules.Nameservice.Types.WhoisMessage
instance GHC.Show.Show Nameservice.Modules.Nameservice.Types.WhoisMessage
instance GHC.Classes.Eq Nameservice.Modules.Nameservice.Types.WhoisMessage
instance GHC.Show.Show Nameservice.Modules.Nameservice.Types.Whois
instance GHC.Classes.Eq Nameservice.Modules.Nameservice.Types.Whois
instance Data.Aeson.Types.FromJSON.FromJSON Nameservice.Modules.Nameservice.Types.Name
instance Data.Aeson.Types.ToJSON.ToJSON Nameservice.Modules.Nameservice.Types.Name
instance GHC.Generics.Generic Nameservice.Modules.Nameservice.Types.Name
instance GHC.Show.Show Nameservice.Modules.Nameservice.Types.Name
instance GHC.Classes.Eq Nameservice.Modules.Nameservice.Types.Name
instance Data.Aeson.Types.ToJSON.ToJSON Nameservice.Modules.Nameservice.Types.NameDeleted
instance Data.Aeson.Types.FromJSON.FromJSON Nameservice.Modules.Nameservice.Types.NameDeleted
instance Tendermint.SDK.BaseApp.Events.ToEvent Nameservice.Modules.Nameservice.Types.NameDeleted
instance Tendermint.SDK.BaseApp.Logger.Select Nameservice.Modules.Nameservice.Types.NameDeleted
instance Data.Aeson.Types.ToJSON.ToJSON Nameservice.Modules.Nameservice.Types.NameRemapped
instance Data.Aeson.Types.FromJSON.FromJSON Nameservice.Modules.Nameservice.Types.NameRemapped
instance Tendermint.SDK.BaseApp.Events.ToEvent Nameservice.Modules.Nameservice.Types.NameRemapped
instance Tendermint.SDK.BaseApp.Logger.Select Nameservice.Modules.Nameservice.Types.NameRemapped
instance Data.Aeson.Types.ToJSON.ToJSON Nameservice.Modules.Nameservice.Types.NameClaimed
instance Data.Aeson.Types.FromJSON.FromJSON Nameservice.Modules.Nameservice.Types.NameClaimed
instance Tendermint.SDK.BaseApp.Events.ToEvent Nameservice.Modules.Nameservice.Types.NameClaimed
instance Tendermint.SDK.BaseApp.Logger.Select Nameservice.Modules.Nameservice.Types.NameClaimed
instance Data.Aeson.Types.ToJSON.ToJSON Nameservice.Modules.Nameservice.Types.Faucetted
instance Data.Aeson.Types.FromJSON.FromJSON Nameservice.Modules.Nameservice.Types.Faucetted
instance Tendermint.SDK.BaseApp.Events.ToEvent Nameservice.Modules.Nameservice.Types.Faucetted
instance Tendermint.SDK.BaseApp.Logger.Select Nameservice.Modules.Nameservice.Types.Faucetted
instance Tendermint.SDK.BaseApp.Errors.IsAppError Nameservice.Modules.Nameservice.Types.NameserviceError
instance Proto3.Suite.Class.Message Nameservice.Modules.Nameservice.Types.WhoisMessage
instance Proto3.Suite.Class.Named Nameservice.Modules.Nameservice.Types.WhoisMessage
instance Tendermint.SDK.Codec.HasCodec Nameservice.Modules.Nameservice.Types.Whois
instance Tendermint.SDK.BaseApp.Store.RawStore.IsKey Nameservice.Modules.Nameservice.Types.Name Nameservice.Modules.Nameservice.Types.NameserviceModuleName
instance Tendermint.SDK.BaseApp.Query.Types.Queryable Nameservice.Modules.Nameservice.Types.Whois
instance Proto3.Suite.Class.Primitive Nameservice.Modules.Nameservice.Types.Name
instance Proto3.Suite.Class.HasDefault Nameservice.Modules.Nameservice.Types.Name
instance Proto3.Suite.Class.MessageField Nameservice.Modules.Nameservice.Types.Name
instance Data.String.IsString Nameservice.Modules.Nameservice.Types.Name
instance Tendermint.SDK.BaseApp.Query.Types.FromQueryData Nameservice.Modules.Nameservice.Types.Name
instance Tendermint.SDK.BaseApp.Store.RawStore.RawKey Nameservice.Modules.Nameservice.Types.Name

module Nameservice.Modules.Nameservice.Messages
data SetName
SetName :: Name -> Address -> Text -> SetName
[setNameName] :: SetName -> Name
[setNameOwner] :: SetName -> Address
[setNameValue] :: SetName -> Text
data BuyName
BuyName :: Amount -> Name -> Text -> Address -> BuyName
[buyNameBid] :: BuyName -> Amount
[buyNameName] :: BuyName -> Name
[buyNameValue] :: BuyName -> Text
[buyNameBuyer] :: BuyName -> Address
data BuyNameMessage
BuyNameMessage :: Word64 -> Name -> Text -> Address -> BuyNameMessage
[buyNameMessageBid] :: BuyNameMessage -> Word64
[buyNameMessageName] :: BuyNameMessage -> Name
[buyNameMessageValue] :: BuyNameMessage -> Text
[buyNameMessageBuyer] :: BuyNameMessage -> Address
data DeleteName
DeleteName :: Address -> Name -> DeleteName
[deleteNameOwner] :: DeleteName -> Address
[deleteNameName] :: DeleteName -> Name
data FaucetAccount
FaucetAccount :: Address -> CoinId -> Amount -> FaucetAccount
[faucetAccountTo] :: FaucetAccount -> Address
[faucetAccountCoinId] :: FaucetAccount -> CoinId
[faucetAccountAmount] :: FaucetAccount -> Amount
instance GHC.Generics.Generic Nameservice.Modules.Nameservice.Messages.BuyNameMessage
instance GHC.Show.Show Nameservice.Modules.Nameservice.Messages.BuyNameMessage
instance GHC.Classes.Eq Nameservice.Modules.Nameservice.Messages.BuyNameMessage
instance GHC.Show.Show Nameservice.Modules.Nameservice.Messages.BuyName
instance GHC.Classes.Eq Nameservice.Modules.Nameservice.Messages.BuyName
instance GHC.Generics.Generic Nameservice.Modules.Nameservice.Messages.DeleteName
instance GHC.Show.Show Nameservice.Modules.Nameservice.Messages.DeleteName
instance GHC.Classes.Eq Nameservice.Modules.Nameservice.Messages.DeleteName
instance GHC.Generics.Generic Nameservice.Modules.Nameservice.Messages.SetName
instance GHC.Show.Show Nameservice.Modules.Nameservice.Messages.SetName
instance GHC.Classes.Eq Nameservice.Modules.Nameservice.Messages.SetName
instance GHC.Generics.Generic Nameservice.Modules.Nameservice.Messages.FaucetAccountMessage
instance GHC.Show.Show Nameservice.Modules.Nameservice.Messages.FaucetAccountMessage
instance GHC.Classes.Eq Nameservice.Modules.Nameservice.Messages.FaucetAccountMessage
instance GHC.Show.Show Nameservice.Modules.Nameservice.Messages.FaucetAccount
instance GHC.Classes.Eq Nameservice.Modules.Nameservice.Messages.FaucetAccount
instance Proto3.Suite.Class.Message Nameservice.Modules.Nameservice.Messages.BuyNameMessage
instance Proto3.Suite.Class.Named Nameservice.Modules.Nameservice.Messages.BuyNameMessage
instance Tendermint.SDK.Codec.HasCodec Nameservice.Modules.Nameservice.Messages.BuyName
instance Tendermint.SDK.Types.Message.HasMessageType Nameservice.Modules.Nameservice.Messages.BuyName
instance Tendermint.SDK.Types.Message.ValidateMessage Nameservice.Modules.Nameservice.Messages.BuyName
instance Proto3.Suite.Class.Message Nameservice.Modules.Nameservice.Messages.DeleteName
instance Proto3.Suite.Class.Named Nameservice.Modules.Nameservice.Messages.DeleteName
instance Tendermint.SDK.Types.Message.HasMessageType Nameservice.Modules.Nameservice.Messages.DeleteName
instance Tendermint.SDK.Codec.HasCodec Nameservice.Modules.Nameservice.Messages.DeleteName
instance Tendermint.SDK.Types.Message.ValidateMessage Nameservice.Modules.Nameservice.Messages.DeleteName
instance Proto3.Suite.Class.Message Nameservice.Modules.Nameservice.Messages.SetName
instance Proto3.Suite.Class.Named Nameservice.Modules.Nameservice.Messages.SetName
instance Tendermint.SDK.Types.Message.HasMessageType Nameservice.Modules.Nameservice.Messages.SetName
instance Tendermint.SDK.Codec.HasCodec Nameservice.Modules.Nameservice.Messages.SetName
instance Tendermint.SDK.Types.Message.ValidateMessage Nameservice.Modules.Nameservice.Messages.SetName
instance Proto3.Suite.Class.Message Nameservice.Modules.Nameservice.Messages.FaucetAccountMessage
instance Proto3.Suite.Class.Named Nameservice.Modules.Nameservice.Messages.FaucetAccountMessage
instance Tendermint.SDK.Codec.HasCodec Nameservice.Modules.Nameservice.Messages.FaucetAccount
instance Tendermint.SDK.Types.Message.HasMessageType Nameservice.Modules.Nameservice.Messages.FaucetAccount
instance Tendermint.SDK.Types.Message.ValidateMessage Nameservice.Modules.Nameservice.Messages.FaucetAccount

module Nameservice.Modules.Nameservice.Keeper
data NameserviceKeeper m a
type NameserviceEffs = '[NameserviceKeeper, Error NameserviceError]
nameserviceCoinId :: CoinId
setName :: Members [Logger, Output Event] r => Members NameserviceEffs r => SetName -> Sem r ()
deleteName :: Members [Logger, Output Event] r => Members BankEffs r => Members NameserviceEffs r => DeleteName -> Sem r ()

-- | did it succeed
buyName :: Members [Logger, Output Event] r => Members BankEffs r => Members NameserviceEffs r => BuyName -> Sem r ()
storeKey :: StoreKey NameserviceModuleName
faucetAccount :: Members [Logger, Output Event] r => Members BankEffs r => FaucetAccount -> Sem r ()
eval :: Members TxEffs r => forall a. Sem (NameserviceKeeper : (Error NameserviceError : r)) a -> Sem r a

module Nameservice.Modules.Nameservice.Router
type MessageApi = TypedMessage BuyName :~> Return () :<|> TypedMessage SetName :~> Return () :<|> TypedMessage DeleteName :~> Return () :<|> TypedMessage FaucetAccount :~> Return ()
messageHandlers :: Members BaseEffs r => Members BankEffs r => Members TxEffs r => Members NameserviceEffs r => RouteTx MessageApi r

module Nameservice.Modules.Nameservice.Query
type QueryApi = QueryApi NameserviceContents
querier :: Members QueryEffs r => RouteQ QueryApi r

module Nameservice.Modules.Nameservice
type Nameservice = Module "nameservice" MessageApi MessageApi QueryApi NameserviceEffs '[Bank]
nameserviceModule :: Members (ModuleEffs Nameservice) r => Nameservice r
data NameserviceKeeper m a
type NameserviceEffs = '[NameserviceKeeper, Error NameserviceError]
nameserviceCoinId :: CoinId
eval :: Members TxEffs r => forall a. Sem (NameserviceKeeper : (Error NameserviceError : r)) a -> Sem r a
faucetAccount :: Members [Logger, Output Event] r => Members BankEffs r => FaucetAccount -> Sem r ()
setName :: Members [Logger, Output Event] r => Members NameserviceEffs r => SetName -> Sem r ()
deleteName :: Members [Logger, Output Event] r => Members BankEffs r => Members NameserviceEffs r => DeleteName -> Sem r ()

-- | did it succeed
buyName :: Members [Logger, Output Event] r => Members BankEffs r => Members NameserviceEffs r => BuyName -> Sem r ()

module Nameservice.Application
type NameserviceModules = '[Nameservice, Bank, Auth]
handlersContext :: HandlersContext Secp256k1 NameserviceModules CoreEffs

module Nameservice.Server
makeAndServeApplication :: AppConfig -> IO ()
